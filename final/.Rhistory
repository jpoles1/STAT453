f1
# Chunk 1
library(BOIN)
library(ggplot2)
library(gridExtra)
library(plot3D)
f1 = function(i){(i["x"]+i["y"])}
f2 = function(i){(i["x"]+i["y"]**2)}
f3 = function(i){((i["x"])**2+(.2*i["y"]))}
f4 = function(i){(i["x"]+i["y"]**2+rnorm(1, mean = 0, sd = .2))}
f5 = function(i){((i["x"]-5)**3+(i["y"]-1)**3)}
plot_sim = function(fn, maxtox, name="fn", output=0){
side = seq(1,4,.1)
siderange = c(min(side), max(side))
xy = as.vector(expand.grid(side, side))
colnames(xy) = c("x", "y")
z = apply(xy, 1, fn)
#scale 0 to 1
z = scale(z, center = min(z), scale = max(z)-min(z))*maxtox
ds = cbind(xy, z)
z = matrix(z, ncol=length(side), byrow=TRUE)
#p = plot_ly(z=~z) %>% add_surface() %>% layout(title=paste('Plot of', name))
#p = ggplot(data=ds, aes(x=x, y=y, z=z))+geom_contour()
if(output){
persp3D(side, side, z, xlab="Gemcitabine Lvl", ylab="MK-8776 Lvl", main = paste('Plot of', name), zlim=c(0, 1))
}
return(ds)
}
side = c(1:4)
scenario_sim = function(fn, maxtox, xside=side, yside=side, output=0){
xside = scale(xside, center = min(xside), scale = max(xside)-min(xside))
yside = scale(yside, center = min(yside), scale = max(yside)-min(yside))
xy = as.vector(expand.grid(xside, yside))
colnames(xy) = c("x", "y")
z = apply(xy, 1, fn)
#scale 0 to 1
z = scale(z, center = min(z), scale = max(z)-min(z))*maxtox
ds = cbind(xy, z)
z = matrix(z, ncol=length(yside), byrow=TRUE)
if(output){
persp(xside, yside, z, xlab="Gemcitabine Lvl", ylab="MK-8776 Lvl", zlim=c(0, 1))
}
return(z)
}
sims = c(f1, f2, f3, f4, f5)
names = c("f1", "f2", "f3", "f4", "f5")
outcomes = c()
scenarios = c()
for(i in seq_along(sims)){
sim = sims[[i]]
sim_name = names[i]
outcome = plot_sim(sim, 1, sim_name, output=0)
scenario = scenario_sim(sim, 1)
scenarios = append(scenarios, list(scenario))
outcomes = rbind(outcomes, cbind(outcome, i))
}
# Chunk 2
xside=c(400, 600, 800, 1000)
yside = c(20,40,80,112)
ggplot(data=outcomes, aes(x=x,y=y,z=z, colour=..level..))+geom_contour()+facet_wrap(~i)
# Chunk 3
f1
maxtox=.6
ds = plot_sim(f1, maxtox, "f1", 1)
scenario_sim(f1, maxtox, xside, yside, 1)
get.oc.comb(.3, scenario_sim(f1, maxtox, xside, yside, 0), 42, 3, n.earlystop=42, startdose=c(1, 1), ntrial=1000, MTD.contour=FALSE)
# Chunk 4
f2
ds = plot_sim(f2, maxtox, "f2", output=1)
scenario_sim(f2, maxtox, xside, yside, 1)
get.oc.comb(.3, scenario_sim(f2, maxtox, xside, yside, 0), 42, 3, n.earlystop=42, startdose=c(1, 1), ntrial=1000, MTD.contour=FALSE)
# Chunk 5
f3
ds = plot_sim(f3, maxtox, "f3", output=1)
scenario_sim(f3, maxtox, xside, yside, 1)
get.oc.comb(.3, scenario_sim(f3, maxtox, xside, yside, 0), 42, 3, n.earlystop=42, startdose=c(1, 1), ntrial=1000, MTD.contour=FALSE)
# Chunk 6
f4
ds = plot_sim(f4, .45, "f4", output=1)
scenario_sim(f4, .45, xside, yside, 1)
get.oc.comb(.3, scenario_sim(f4, .45, xside, yside, 0), 42, 3, n.earlystop=42, startdose=c(1, 1), ntrial=1000, MTD.contour=FALSE)
# Chunk 7
f5 = function(i){((i["x"]-3)**3+(i["y"]-1)**3)-(2*i["x"]*i["y"])}
ds = plot_sim(f5, maxtox, "f5", output=1)
scenario_sim(f5, maxtox, xside, yside, 1)
get.oc.comb(.3, scenario_sim(f5, maxtox, xside, yside, 0), 42, 3, n.earlystop=42, startdose=c(1, 1), ntrial=1000, MTD.contour=FALSE)
# Chunk 8
xside=c(600, 800, 1000)
yside=c(20, 40, 80, 100, 120)
maxtox=.4
f1
scenario_sim(f1, maxtox, xside, yside, 1)
scenario_sim(f1, maxtox, xside, yside, 1)
xside=c(400, 600, 800, 1000)
yside = c(20,40,80,112)
scenario_sim(f1, maxtox, xside, yside, 1)
xside
yside
xside=c(600, 800, 1000)
yside=c(20, 40, 80, 100, 120)
xside
yside
scenario_sim(f1, maxtox, xside, yside, 1)
f1(100, 800)
f1(c(100, 800))
f1(c(1, 2))
yside=c(600, 800, 1000)
xside=c(20, 40, 80, 100, 120)
maxtox=.4
scenario_sim(f1, maxtox, xside, yside, 1)
get.oc.comb(.25, scenario_sim(f1, maxtox, xside, yside, 1), ncohort=c(27,15,15), cohortsize=3, n.earlystop=15, startdose=c(1, 1), ntrial=1000, MTD.contour=TRUE)
?t
get.oc.comb(.25, t(scenario_sim(f1, maxtox, xside, yside, 1)), ncohort=c(27,15,15), cohortsize=3, n.earlystop=15, startdose=c(1, 1), ntrial=1000, MTD.contour=TRUE)
scenario_sim(f1, maxtox, xside, yside, 1)
scenario_sim(f1, maxtox, xside, yside, 1)
xside = scale(xside, center = min(xside), scale = max(xside)-min(xside))
yside = scale(yside, center = min(yside), scale = max(yside)-min(yside))
xy = as.vector(expand.grid(xside, yside))
View(xy)
colnames(xy) = c("x", "y")
z = apply(xy, 1, fn)
z = apply(xy, 1, fn1)
z = apply(xy, 1, f1)
z = matrix(z, ncol=length(yside), byrow=TRUE)
z
z = apply(xy, 1, f1)
z = matrix(t(z), ncol=length(yside), byrow=TRUE)
z
t(z)
xside=c(600, 800, 1000)
yside=c(20, 40, 80, 100, 120)
xside = scale(xside, center = min(xside), scale = max(xside)-min(xside))
yside = scale(yside, center = min(yside), scale = max(yside)-min(yside))
xy = as.vector(expand.grid(xside, yside))
colnames(xy) = c("x", "y")
z = apply(xy, 1, fn)
z = apply(xy, 1, f1)
z
matrix(z, ncol=length(yside), byrow=TRUE)
matrix(t(z), ncol=length(yside), byrow=TRUE)
matrix(z, ncol=length(yside), byrow=TRUE)
matrix(z, ncol=length(xside), byrow=TRUE)
t(matrix(z, ncol=length(xside), byrow=TRUE))
